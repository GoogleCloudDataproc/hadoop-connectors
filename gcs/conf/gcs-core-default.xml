<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>fs.gs.project.id</name>
    <value></value>
    <description>
      Required. Google Cloud Project ID with access to configured GCS buckets.
    </description>
  </property>
  <property>
    <name>fs.gs.working.dir</name>
    <value>/</value>
    <description>
      The directory relative gs: uris resolve in inside of the default bucket.
    </description>
  </property>
  <property>
    <name>fs.gs.implicit.directory.repair</name>
    <value>true</value>
    <description>
      Whether or not to create objects for the parent directories of objects
      with / in their path e.g. creating gs://bucket/foo/ upon finding
      gs://bucket/foo/bar.
    </description>
  </property>
  <property>
    <name>fs.gs.glob.flatlist.enable</name>
    <value>true</value>
    <description>
      Whether or not to prepopulate potenital glob matches in a single list
      request to minimize calls to GCS in nested glob cases.
    </description>
  </property>
  <property>
    <name>fs.gs.copy.with.rewrite.enable</name>
    <value></value>
    <description>
      Whether or not to perform copy operation using Rewrite requests. Allows
      to copy files between different locations and storage classes.
    </description>
  </property>
  <property>
    <name>fs.gs.system.bucket</name>
    <value></value>
    <description>
      Deprecated. GCS bucket to use as a default bucket if fs.default.name
      is not a gs: uri.
    </description>
  </property>

  <!-- Authorization -->

  <!-- When one of the following two properties is set, it will precede all other credential
   settings, and credentials will be obtained from the access token provider.
  -->
  <property>
    <name>fs.gs.auth.access.token.provider.impl</name>
    <value></value>
    <description>
      The implementation of the AccessTokenProvider interface used for GCS Connector.
    </description>
  </property>
  <property>
    <name>mapred.bq.auth.access.token.provider.impl</name>
    <value></value>
    <description>
      The implementation of the AccessTokenProvider interface used for BigQuery Connector.
    </description>
  </property>

  <property>
    <name>google.cloud.auth.service.account.enable</name>
    <value>true</value>
    <description>
      Whether to use a service account for GCS authorizaiton. If an email and
      keyfile are provided (see google.cloud.auth.service.account.email and
      google.cloud.auth.service.account.keyfile), then that service account
      willl be used. Otherwise the connector will look to see if it running on
      a GCE VM with some level of GCS access in it's service account scope, and
      use that service account.
    </description>
  </property>

  <!-- The following properties are required when not on a GCE VM and
    google.cloud.auth.service.account.enable is true.
  -->
  <property>
    <name>google.cloud.auth.service.account.email</name>
    <value></value>
    <description>
      The email address is associated with the service account used for GCS
      access when google.cloud.auth.service.account.enable is true. Required
      when a PKCS12 certificate is being used.
    </description>
  </property>
  <property>
    <name>google.cloud.auth.service.account.keyfile</name>
    <value></value>
    <description>
      The PKCS12 (p12) certificate file of the service account used for GCS
      access when google.cloud.auth.service.account.enable is true.
    </description>
  </property>

  <!--  The following properties are required when
    google.cloud.auth.service.account.enable is false.
  -->
  <property>
    <name>google.cloud.auth.client.id</name>
    <value></value>
    <description>
      The client ID for GCS access in the OAuth 2.0 installed application flow
      (when google.cloud.auth.service.account.enable is false).
    </description>
  </property>
  <property>
    <name>google.cloud.auth.client.secret</name>
    <value></value>
    <description>
      The client secret for GCS access in the OAuth 2.0 installed application
      flow (when google.cloud.auth.service.account.enable is false).
    </description>
  </property>
  <property>
    <name>google.cloud.auth.client.file</name>
    <value></value>
    <description>
      The client credential file for GCS access in the OAuth 2.0 installed
      application flow (when google.cloud.auth.service.account.enable is
      false).
    </description>
  </property>

  <!-- Block, Buffer, retries, timeouts, and file sizes -->

  <property>
    <name>fs.gs.http.max.retry</name>
    <value></value>
    <description>
      The maximum number of retries for low-level HTTP requests to GCS when
      server errors (code: 5XX) or I/O errors are encountered.
    </description>
  </property>
  <property>
    <name>fs.gs.http.connect-timeout</name>
    <value></value>
    <description>
      Timeout in milliseconds to establish a connection.
      Use 0 for an infinite timeout.
    </description>
  </property>
  <property>
    <name>fs.gs.http.read-timeout</name>
    <value></value>
    <description>
      Timeout in milliseconds to read from an established connection.
      Use 0 for an infinite timeout.
    </description>
  </property>
  <property>
    <name>fs.gs.block.size</name>
    <value>67108864</value>
    <description>
      The reported block size of the file system. This does not change any
      behavior of the connector or the underlying GCS objectsr. However it
      will affect the number of splits Hadoop MapReduce uses for a given
      input.
    </description>
  </property>
  <property>
    <name>fs.gs.io.buffersize</name>
    <value>8388608</value>
    <description>
      The number of bytes in read buffers.
    </description>
  </property>
  <property>
    <name>fs.gs.io.buffersize.write</name>
    <value>67108864</value>
    <description>
      The number of bytes in write buffers.
    </description>
  </property>
  <property>
    <name>fs.gs.file.size.limit.250gb</name>
    <value>true</value>
    <description>
      Whether to limit files to 250 GB. Setting to false may degrade connector
      performance somewhat.
    </description>
  </property>
  <property>
    <name>fs.gs.marker.file.pattern</name>
    <value></value>
    <description>
      If set, files that match specified pattern are copied last during folder rename operation.
    </description>
  </property>

  <!-- GCS Requester Pays feature configuration:
    https://cloud.google.com/storage/docs/requester-pays
  -->

  <property>
    <name>fs.gs.requester.pays.mode</name>
    <value>DISABLED</value>
    <description>
      Optional. Accepted values: AUTO, CUSTOM, DISABLED, ENABLED.
      For each mode GCS connector functions as follow:
        - AUTO - Requester Pays feature enabled only for GCS buckets that
          require it;
        - CUSTOM - Requester Pays feature enabled only for GCS buckets that are
          specified in the `fs.gs.requester.pays.buckets`;
        - DISABLED - Requester Pays feature disabled for all GCS buckets;
        - ENABLED - Requester Pays feature enabled for all GCS buckets.
    </description>
  </property>
  <property>
    <name>fs.gs.requester.pays.project.id</name>
    <description>
      Optional. Google Cloud Project ID that will be used for billing when
      GCS Requester Pays feature is active (in AUTO, CUSTOM or ENABLED mode).
      If not specified and GCS Requester Pays is active then value of the
      `fs.gs.project.id` property will be used.
    </description>
  </property>
  <property>
    <name>fs.gs.requester.pays.buckets</name>
    <description>
      Optional. Comma-separated list of Google Cloud Storage Buckets for which
      GCS Requester Pays feature should be activated if
      `fs.gs.requester.pays.mode` property value is set to CUSTOM.
    </description>
  </property>

</configuration>
