<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>fs.gs.project.id</name>
    <value></value>
    <description>
      Optional. Google Cloud Project ID with access to GCS buckets.
      Required only for list buckets and create bucket operations.
    </description>
  </property>
  <property>
    <name>fs.gs.working.dir</name>
    <value>/</value>
    <description>
      The directory relative gs: uris resolve in inside of the default bucket.
    </description>
  </property>
  <property>
    <name>fs.gs.implicit.dir.repair.enable</name>
    <value>true</value>
    <description>
      Whether or not to create objects for the parent directories of objects
      with / in their path e.g. creating gs://bucket/foo/ upon deleting or
      renaming gs://bucket/foo/bar.
    </description>
  </property>
  <property>
    <name>fs.gs.glob.flatlist.enable</name>
    <value>true</value>
    <description>
      Whether or not to prepopulate potential glob matches in a single list
      request to minimize calls to GCS in nested glob cases.
    </description>
  </property>
  <property>
    <name>fs.gs.copy.with.rewrite.enable</name>
    <value></value>
    <description>
      Whether or not to perform copy operation using Rewrite requests. Allows
      to copy files between different locations and storage classes.
    </description>
  </property>
  <property>
    <name>fs.gs.system.bucket</name>
    <value></value>
    <description>
      Deprecated. GCS bucket to use as a default bucket if fs.default.name
      is not a gs: uri.
    </description>
  </property>

  <!-- Authorization -->

  <!-- When one of the following two properties is set, it will precede all other credential
   settings, and credentials will be obtained from the access token provider.
  -->
  <property>
    <name>fs.gs.auth.access.token.provider.impl</name>
    <value></value>
    <description>
      The implementation of the AccessTokenProvider interface used for GCS Connector.
    </description>
  </property>
  <property>
    <name>mapred.bq.auth.access.token.provider.impl</name>
    <value></value>
    <description>
      The implementation of the AccessTokenProvider interface used for BigQuery Connector.
    </description>
  </property>

  <property>
    <name>fs.gs.auth.service.account.enable</name>
    <value>true</value>
    <description>
      Whether to use a service account for GCS authorization. If an email and
      keyfile are provided (see fs.gs.auth.service.account.email and
      fs.gs.auth.service.account.keyfile), then that service account
      will be used. Otherwise the connector will look to see if it is running on
      a GCE VM with some level of GCS access in it's service account scope, and
      use that service account.
      Note: alternatively you can set `GOOGLE_APPLICATION_CREDENTIALS` environment
      variable to `/path/to/keyfile.json`
    </description>
  </property>

  <!-- The following properties are required when not on a GCE VM and
    fs.gs.auth.service.account.enable is true. There are 3 ways to configure
    these credentials, which are mutually exclusive.
  -->

  <property>
    <name>fs.gs.auth.service.account.email</name>
    <value></value>
    <description>
      The email address is associated with the service account used for GCS
      access when fs.gs.auth.service.account.enable is true. Required
      when authentication key specified in the Configuration file (Method 1)
      or a PKCS12 certificate (Method 3) is being used.
    </description>
  </property>

  <!-- Method 1
    Configure service account details directly in the Configuration file
    or via Hadoop Credentials.
    https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/CredentialProviderAPI.html
   -->
  <property>
    <name>fs.gs.auth.service.account.private.key.id</name>
    <value></value>
    <description>
      The private key id associated with the service account used for GCS access.
      This can be extracted from the json keyfile generated via the Google Cloud
      Console.
    </description>
  </property>
  <property>
    <name>fs.gs.auth.service.account.private.key</name>
    <value></value>
    <description>
      The private key associated with the service account used for GCS access.
      This can be extracted from the json keyfile generated via the Google Cloud
      Console.
    </description>
  </property>

  <!-- Method 2
    Configure service account credentials using a json keyfile. The file must exist at the same
    path on all nodes
  -->
  <property>
    <name>fs.gs.auth.service.account.json.keyfile</name>
    <value></value>
    <description>The path to the json keyfile for the service account.</description>
  </property>

  <!-- Method 3
    Configure service account credentials using a P12 certificate. The file must exist at the same
    path on all nodes
  -->
  <property>
    <name>fs.gs.auth.service.account.keyfile</name>
    <value></value>
    <description>
      The PKCS12 (p12) certificate file of the service account used for GCS
      access when fs.gs.auth.service.account.enable is true.
    </description>
  </property>

  <!--  The following properties are required when
    fs.gs.auth.service.account.enable is false.
  -->
  <property>
    <name>fs.gs.auth.client.id</name>
    <value></value>
    <description>
      The client ID for GCS access in the OAuth 2.0 installed application flow
      (when fs.gs.auth.service.account.enable is false).
    </description>
  </property>
  <property>
    <name>fs.gs.auth.client.secret</name>
    <value></value>
    <description>
      The client secret for GCS access in the OAuth 2.0 installed application
      flow (when fs.gs.auth.service.account.enable is false).
    </description>
  </property>
  <property>
    <name>fs.gs.auth.client.file</name>
    <value></value>
    <description>
      The client credential file for GCS access in the OAuth 2.0 installed
      application flow (when fs.gs.auth.service.account.enable is false).
    </description>
  </property>

  <!-- Block, Buffer, retries, timeouts, and file sizes -->

  <property>
    <name>fs.gs.http.max.retry</name>
    <value></value>
    <description>
      The maximum number of retries for low-level HTTP requests to GCS when
      server errors (code: 5XX) or I/O errors are encountered.
    </description>
  </property>
  <property>
    <name>fs.gs.http.connect-timeout</name>
    <value></value>
    <description>
      Timeout in milliseconds to establish a connection.
      Use 0 for an infinite timeout.
    </description>
  </property>
  <property>
    <name>fs.gs.http.read-timeout</name>
    <value></value>
    <description>
      Timeout in milliseconds to read from an established connection.
      Use 0 for an infinite timeout.
    </description>
  </property>
  <property>
    <name>fs.gs.block.size</name>
    <value>67108864</value>
    <description>
      The reported block size of the file system. This does not change any
      behavior of the connector or the underlying GCS objects. However it
      will affect the number of splits Hadoop MapReduce uses for a given input.
    </description>
  </property>
  <property>
    <name>fs.gs.inputstream.buffer.size</name>
    <value>0</value>
    <description>The number of bytes in read buffers.</description>
  </property>
  <property>
    <name>fs.gs.outputstream.upload.chunk.size</name>
    <value>67108864</value>
    <description>The number of bytes in one GCS upload request.</description>
  </property>
  <property>
    <name>fs.gs.marker.file.pattern</name>
    <value></value>
    <description>
      If set, files that match specified pattern are copied last during folder rename operation.
    </description>
  </property>

  <!-- GCS Requester Pays feature configuration:
    https://cloud.google.com/storage/docs/requester-pays
  -->

  <property>
    <name>fs.gs.requester.pays.mode</name>
    <value>DISABLED</value>
    <description>
      Optional. Accepted values: AUTO, CUSTOM, DISABLED, ENABLED.
      For each mode GCS connector functions as follow:
        - AUTO - Requester Pays feature enabled only for GCS buckets that
          require it;
        - CUSTOM - Requester Pays feature enabled only for GCS buckets that are
          specified in the `fs.gs.requester.pays.buckets`;
        - DISABLED - Requester Pays feature disabled for all GCS buckets;
        - ENABLED - Requester Pays feature enabled for all GCS buckets.
    </description>
  </property>
  <property>
    <name>fs.gs.requester.pays.project.id</name>
    <description>
      Optional. Google Cloud Project ID that will be used for billing when
      GCS Requester Pays feature is active (in AUTO, CUSTOM or ENABLED mode).
      If not specified and GCS Requester Pays is active then value of the
      `fs.gs.project.id` property will be used.
    </description>
  </property>
  <property>
    <name>fs.gs.requester.pays.buckets</name>
    <description>
      Optional. Comma-separated list of Google Cloud Storage Buckets for which
      GCS Requester Pays feature should be activated if
      `fs.gs.requester.pays.mode` property value is set to CUSTOM.
    </description>
  </property>

  <property>
    <name>fs.gs.config.override.file</name>
    <description>
      Optional. Override configuration file path. Properties defined in this file overrides
      the properties defined in core-site.xml and values passed from command line.
    </description>
  </property>
</configuration>
